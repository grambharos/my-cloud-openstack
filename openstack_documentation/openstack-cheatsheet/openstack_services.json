{"grouped_components":{"Compute":[{"id":2,"name":"Compute Service","description":"To implement services and associated libraries to provide massively scalable, on demand, self service access to compute resources, including bare metal, virtual machines, and containers.","code_name":"Nova","slug":"nova","adoption":"95","mascot_css_class":"Nova","age":7,"maturity_points":"7"},{"id":7,"name":"Image Service","description":"Glance image services include discovering, registering, and retrieving virtual machine images. Glance has a RESTful API that allows querying of VM image metadata as well as retrieval of the actual image. VM images made available through Glance can be stored in a variety of locations from simple filesystems to object-storage systems like the OpenStack Swift project.","code_name":"Glance","slug":"glance","adoption":"95","mascot_css_class":"Glance","age":7,"maturity_points":"5"},{"id":12,"name":"Bare Metal Provisioning Service","description":"Ironic is an OpenStack project which provisions bare metal (as opposed to virtual) machines. It may be used independently or as part of an OpenStack Cloud, and integrates with the OpenStack Identity (keystone), Compute (nova), Network (neutron), Image (glance) and Object (swift) services. When the Bare Metal service is appropriately configured with the Compute and Network services, it is possible to provision both virtual and physical machines through the Compute service\u2019s API.","code_name":"Ironic","slug":"ironic","adoption":"21","mascot_css_class":"Ironic","age":3,"maturity_points":"5"},{"id":17,"name":"Container Orchestration Engine Provisioning","description":"Magnum makes container orchestration engines such as Docker Swarm, Kubernetes, and Apache Mesos available as first class resources in OpenStack. Magnum uses Heat to orchestrate an OS image which contains Docker and Kubernetes and runs that image in either virtual machines or bare metal in a cluster configuration.","code_name":"Magnum","slug":"magnum","adoption":"11","mascot_css_class":"Magnum","age":2,"maturity_points":"2"},{"id":21,"name":"Computable Object Store","description":"Openstack Storlets is an extension to Openstack Swift with the ability to run user defined computations - called storlets - inside the object store in a secure and isolated manner through the use of Docker containers. A storlet is a compiled and packaged code (e.g. a .jar file) that can be uploaded to Swift as any other object. Once uploaded the storlet can be invoked over data objects in Swift.","code_name":"Storlets","slug":"storlets","adoption":"0","mascot_css_class":"Storlets","age":1,"maturity_points":"0"},{"id":22,"name":"Container Management Service","description":"Zun provides an OpenStack API for launching and managing containers backed by different container technologies. Different from Magnum, Zun is for users who want to treat containers as OpenStack-managed resource. Containers managed by Zun are supposed to be integrated well with other OpenStack resources, such as Neutron network and Cinder volume. Users are provided a simplified APIs to manage containers without the need to explore the complexities of different container technologies.","code_name":"Zun","slug":"zun","adoption":"0","mascot_css_class":"Zun","age":1,"maturity_points":"1"}],"Storage, Backup & Recovery":[{"id":4,"name":"Object Store","description":"Swift is a highly available, distributed, eventually consistent object\/blob store. Organizations can use Swift to store lots of data efficiently, safely, and cheaply. It's built for scale and optimized for durability, availability, and concurrency across the entire data set. Swift is ideal for storing unstructured data that can grow without bound.","code_name":"Swift","slug":"swift","adoption":"52","mascot_css_class":"Barbican","age":7,"maturity_points":"6"},{"id":5,"name":"Block Storage","description":"Cinder is a Block Storage service for OpenStack. It virtualizes the management of block storage devices and provides end users with a self service API to request and consume those resources without requiring any knowledge of where their storage is actually deployed or on what type of device. This is done through the use of either a reference implementation (LVM) or plugin drivers for other storage. ","code_name":"Cinder","slug":"cinder","adoption":"88","mascot_css_class":"Cinder","age":5,"maturity_points":"7"},{"id":14,"name":"Shared Filesystems","description":null,"code_name":"Manila","slug":"manila","adoption":"14","mascot_css_class":"Manila","age":3,"maturity_points":"5"},{"id":46,"name":"Application Data Protection as a Service","description":"Karbor deals with protecting the Data and Meta-Data that comprises an OpenStack-deployed application against loss\/damage (e.g. backup, replication) - not to be confused with Application Security or DLP. It does that by providing a standard framework of APIs and services that enables vendors to introduce various data protection services into a coherent and unified flow for the user.","code_name":"Karbor","slug":"karbor","adoption":"0","mascot_css_class":"Barbican","age":1,"maturity_points":"0"},{"id":47,"name":"Backup, Restore, and Disaster Recovery","description":"Freezer is a distributed backup, restore and disaster recovery as a service platform. It is designed to be multi OS (Linux, Windows, OSX, *BSD), focused on providing efficiency and flexibility for block based backups, file based incremental backups, point-in-time actions, jobs synchronization (i.e. backup synchronization over multiple nodes) and many other features. It is aimed at being useful for all environments, including large ephemeral Clouds. ","code_name":"Freezer","slug":"freezer","adoption":"0","mascot_css_class":"Barbican","age":2,"maturity_points":"0"}],"Networking & Content Delivery":[{"id":3,"name":"Networking","description":"OpenStack Neutron is an SDN networking project focused on delivering networking-as-a-service (NaaS) in virtual compute environments.","code_name":"Neutron","slug":"neutron","adoption":"93","mascot_css_class":"Barbican","age":5,"maturity_points":"7"},{"id":15,"name":"DNS Service","description":null,"code_name":"Designate","slug":"designate","adoption":"16","mascot_css_class":"Designate","age":3,"maturity_points":"3"},{"id":40,"name":"Neutron Plugin","description":"Dragonflow is a distributed control plane implementation of Neutron. Its mission is to implement advanced networking services driven by the Neutron API and running on a distributed control plane. It\u2019s designed to support containers networking and large scale production loads.","code_name":"Dragonflow","slug":"dragonflow","adoption":"0","mascot_css_class":"Dragonflow","age":2,"maturity_points":"0"},{"id":41,"name":"Container plugin","description":"Kuryr provides a bridge between container framework networking and storage models to OpenStack networking and storage abstractions.","code_name":"Kuryr","slug":"kuryr","adoption":"0","mascot_css_class":"Barbican","age":1,"maturity_points":"1"},{"id":42,"name":"Load Balancer","description":"Octavia is an open source, operator-scale load balancing solution designed to work with OpenStack. Octavia was borne out of the Neutron LBaaS project, and starting with the Liberty release of OpenStack, Octavia has become the reference implementation for Neutron LBaaS version 2. Octavia accomplishes its delivery of load balancing services by managing a fleet of virtual machines, containers, or bare metal servers\u2014collectively known as amphorae\u2014 which it spins up on demand. This on-demand, horizontal scaling feature differentiates Octavia from other load balancing solutions, thereby making Octavia truly suited \u201cfor the cloud.\u201d","code_name":"Octavia","slug":"octavia","adoption":"0","mascot_css_class":"Octavia","age":1,"maturity_points":"1"},{"id":43,"name":"NFV Orchestration","description":"Tacker provides a generic VNF Manager (VNFM) and an NFV Orchestrator (NFVO) to deploy and operate Network Services and Virtual Network Functions (VNFs) on an NFV infrastructure platform like OpenStack. It is based on ETSI MANO Architectural Framework and provides a functional stack to Orchestrate Network Services end-to-end using VNFs.","code_name":"Tacker","slug":"tacker","adoption":"0","mascot_css_class":"Barbican","age":1,"maturity_points":"1"},{"id":44,"name":"Networking Automation for Multi-Region Deployments","description":"Tricircle provides networking automation across Neutron in multi-region OpenStack deployments. Use cases include application high availability, dual ISPs for internet link redundancy, east-west traffic isolation, cross Nuetron L2 network for NFV, and cloud capacity expansion.","code_name":"Tricircle","slug":"tricircle","adoption":"0","mascot_css_class":"Barbican","age":1,"maturity_points":"0"}],"Data & Analytics":[{"id":10,"name":"Database as a Service","description":"Trove is a database-as-a-service provisioning relational and non-relational database engines","code_name":"Trove","slug":"trove","adoption":"13","mascot_css_class":"Trove","age":4,"maturity_points":"3"},{"id":11,"name":"Big Data Processing Framework Provisioning","description":"The sahara project aims to provide users with a simple means to provision data processing frameworks (such as Hadoop, Spark and Storm) on OpenStack. This is accomplished by specifying configuration parameters such as the framework version, cluster topology, node hardware details and more.","code_name":"Sahara","slug":"sahara","adoption":"10","mascot_css_class":"Sahara","age":3,"maturity_points":"3"},{"id":23,"name":"Indexing and Search","description":"The Searchlight project provides indexing and search capabilities across OpenStack resources. Its goal is to achieve high performance and flexible querying combined with near real-time indexing. It uses Elasticsearch, a real-time distributed indexing and search engine built on Apache Lucene, but adds OpenStack authentication and Role Based Access Control to provide appropriate protection of data.","code_name":"Searchlight","slug":"searchlight","adoption":"0","mascot_css_class":"Searchlight","age":1,"maturity_points":"0"}],"Security, Identity & Compliance":[{"id":6,"name":"Identity service","description":"Keystone is an OpenStack service that provides API client authentication, service discovery, and distributed multi-tenant authorization by implementing OpenStack\u2019s Identity API. It supports LDAP, OAuth, OpenID Connect, SAML and SQL.","code_name":"Keystone","slug":"keystone","adoption":"96","mascot_css_class":"Barbican","age":6,"maturity_points":"6"},{"id":16,"name":"Key Management","description":"Barbican is the OpenStack Key Manager service. It provides secure storage, provisioning and management of secret data, such as passwords, encryption keys, X.509 Certificates and raw binary data. ","code_name":"Barbican","slug":"barbican","adoption":"9","mascot_css_class":"Barbican","age":4,"maturity_points":"4"},{"id":19,"name":"Governance","description":"Barbican is the OpenStack Key Manager service. It provides secure storage, provisioning and management of secret data, such as passwords, encryption keys, X.509 Certificates and raw binary data. ","code_name":"Congress","slug":"congress","adoption":"2","mascot_css_class":"Congress","age":2,"maturity_points":"1"},{"id":45,"name":"Workflow service","description":"Mistral is a workflow service. Most business processes consist of multiple distinct interconnected steps that need to be executed in a particular order in a distributed environment. One can describe such process as a set of tasks and task relations (via YAML-based language) and upload such description to Mistral so that it takes care of state management, correct execution order, parallelism, synchronization and high availability.","code_name":"Mistral","slug":"mistral","adoption":"5","mascot_css_class":"Barbican","age":1,"maturity_points":"1"}],"Management Tools":[{"id":1,"name":"Dashboard","description":"Horizon is the canonical implementation of OpenStack's dashboard, which is extensible and provides a web based user interface to OpenStack services.","code_name":"Horizon","slug":"horizon","adoption":"87","mascot_css_class":"Horizon","age":6,"maturity_points":"6"},{"id":30,"name":"Command-line client","description":"Provide a single command-line interface for OpenStack services with a uniform command set and format.","code_name":"OSclient (CLI)","slug":"osclient-(cli)","adoption":"0","mascot_css_class":"CLI","age":1,"maturity_points":"0"},{"id":33,"name":"Benchmark service","description":"Rally is a benchmarking and performance analysis tool for OpenStack that can be used to automate measuring and profiling focused on how new code changes affect OpenStack performance, detect scaling and performance issues, and investigate how different deployment architectures and hardware affect OpenStack performance. It can be used as a basic tool for an OpenStack CI\/CD system that would continuously improve its SLA, performance and stability.","code_name":"Rally","slug":"rally","adoption":"23","mascot_css_class":"Rally","age":1,"maturity_points":"0"},{"id":34,"name":"Clustering service","description":"Senlin is a clustering service for OpenStack clouds. It creates and operates clusters of homogeneous objects exposed by other OpenStack services. The goal is to make orchestration of collections of similar objects easier.","code_name":"Senlin","slug":"senlin","adoption":"0","mascot_css_class":"Senlin","age":1,"maturity_points":"0"},{"id":38,"name":"RCA (Root Cause Analysis service)","description":"Vitrage is the OpenStack RCA (Root Cause Analysis) service for organizing, analyzing and expanding OpenStack alarms & events, yielding insights regarding the root cause of problems and deducing their existence before they are directly detected.","code_name":"Vitrage","slug":"vitrage","adoption":"0","mascot_css_class":"Vitrage","age":1,"maturity_points":"0"},{"id":39,"name":"Optimization Service","description":"Watcher provides a flexible and scalable resource optimization service for multi-tenant OpenStack-based clouds. Watcher provides a complete optimization loop\u2014including everything from a metrics receiver, optimization processor and an action plan applier.","code_name":"Watcher","slug":"watcher","adoption":"0","mascot_css_class":"Watcher","age":1,"maturity_points":"0"}],"Deployment Tools":[{"id":24,"name":"Chef cookbooks for OpenStack","description":"The Chef OpenStack team builds Chef cookbooks for deploying OpenStack services.","code_name":"Chef OpenStack","slug":"chef-openstack","adoption":"0","mascot_css_class":"Chef OpenStack","age":1,"maturity_points":"1"},{"id":25,"name":"Container deployment","description":"Kolla provides production-ready containers and deployment tools for operating OpenStack clouds that are scalable, fast, reliable, and upgradable using community best practices.","code_name":"Kolla","slug":"kolla","adoption":"12","mascot_css_class":"Kolla","age":1,"maturity_points":"1"},{"id":26,"name":"Juju Charms for OpenStack","description":"Develop and maintain Juju Charms for deploying and managing OpenStack services.","code_name":"OpenStack Charms","slug":"openstack-charms","adoption":"0","mascot_css_class":"OpenStack Charms","age":1,"maturity_points":"0"},{"id":27,"name":"Ansible Playbooks for OpenStack","description":null,"code_name":"OpenStack-Ansible","slug":"openstack-ansible","adoption":"0","mascot_css_class":"Barbican","age":1,"maturity_points":"0"},{"id":28,"name":"Puppet Modules for OpenStack","description":"The Puppet modules for OpenStack bring scalable and reliable IT automation to OpenStack cloud deployments.","code_name":"Puppet OpenStack","slug":"puppet-openstack","adoption":"0","mascot_css_class":"Puppet OpenStack","age":1,"maturity_points":"0"},{"id":29,"name":"Deployment service","description":"Develop and maintain tooling and infrastructure able to deploy OpenStack in production, using OpenStack itself wherever possible.","code_name":"TripleO","slug":"tripleo","adoption":"9","mascot_css_class":"TripleO","age":1,"maturity_points":"0"}],"Application Services":[{"id":9,"name":"Orchestration","description":"Heat orchestrates the infrastructure resources for a cloud application based on templates in the form of text files that can be treated like code. Heat provides both an OpenStack-native ReST API and a CloudFormation-compatible Query API. Heat also provides an autoscaling service that integrates with the OpenStack Telemetry services, so you can include a scaling group as a resource in a template.","code_name":"Heat","slug":"heat","adoption":"67","mascot_css_class":"Heat","age":5,"maturity_points":"5"},{"id":13,"name":"Messaging Service","description":"Zaqar is a multi-tenant cloud messaging service for web and mobile developers. The service features a fully RESTful API, which developers can use to send messages between various components of their SaaS and mobile applications. Underlying this API is an efficient messaging engine designed with scalability and security in mind. Other OpenStack components can integrate with Zaqar to surface events to end users and to communicate with guest agents that run in the \"over-cloud\" layer. Cloud operators can leverage Zaqar to provide equivalents of SQS and SNS to their customers.","code_name":"Zaqar","slug":"zaqar","adoption":"4","mascot_css_class":"Barbican","age":3,"maturity_points":"4"},{"id":18,"name":"Application Catalog","description":"Murano enables application developers and cloud administrators to publish various cloud-ready applications in a browsable catalog. Cloud users -- including inexperienced ones -- can then use the catalog to compose reliable application environments with the push of a button. Murano uses OpenStack Heat to orchestrate infrastructure resources for the application.","code_name":"Murano","slug":"murano","adoption":"11","mascot_css_class":"Murano","age":2,"maturity_points":"1"},{"id":20,"name":"Software Development Lifecycle Automation","description":"To make cloud services easier to consume and integrate with your application development process by automating the source-to-image process, and simplifying app-centric deployment.","code_name":"Solum","slug":"solum","adoption":"2","mascot_css_class":"Solum","age":1,"maturity_points":"0"}],"Monitoring & Metering":[{"id":8,"name":"Metering & Data Collection Service","description":"Ceilometer's goal is to efficiently collect, normalise and transform data produced by OpenStack services. The data it collects is intended to be used to create different views and help solve various telemetry use cases. Aodh and Gnocchi are two examples of services extending Ceilometer data.","code_name":"Ceilometer","slug":"ceilometer","adoption":"55","mascot_css_class":"Telemetry","age":5,"maturity_points":"1"},{"id":31,"name":"Billing and chargebacks","description":"CloudKitty is a rating-as-a-service project designed to translate metrics to prices. CloudKitty supports multiple collectors, multiple rating policies and multiple outputs.","code_name":"CloudKitty","slug":"cloudkitty","adoption":"0","mascot_css_class":"CloudKitty","age":1,"maturity_points":"0"},{"id":32,"name":"Monitoring","description":"Monasca is a open-source multi-tenant, highly scalable, performant, fault-tolerant monitoring-as-a-service solution that integrates with OpenStack. It uses a REST API for high-speed metrics processing and querying and has a streaming alarm engine and notification engine.","code_name":"Monasca","slug":"monasca","adoption":"0","mascot_css_class":"Monasca","age":1,"maturity_points":"0"},{"id":35,"name":"Alarming Service","description":"Aodh's goal is to enable the ability to trigger actions based on defined rules against sample or event data collected by Ceilometer.","code_name":"aodh","slug":"aodh","adoption":"0","mascot_css_class":"Telemetry","age":1,"maturity_points":"0"},{"id":36,"name":"Event, Metadata Indexing Service","description":"Panko is designed to provide a metadata indexing, event storage service which enables users to capture the state information of OpenStack resources at a given time. Its aim is to enable a scalable means of storing both short and long term data for use cases such as auditing and system debugging.","code_name":"panko","slug":"panko","adoption":"0","mascot_css_class":"Telemetry","age":7,"maturity_points":"0"}]}}
